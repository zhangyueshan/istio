apiVersion: networking.x-k8s.io/v1alpha1
kind: GatewayClass
metadata:
  name: istio
spec:
  controller: istio.io/gateway-controller
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: Gateway
metadata:
  name: gateway
  namespace: istio-system
spec:
  class: istio
  listeners:
  - hostname:
      match: Domain
      name: domain.example
    port: 80
    protocol: HTTP
    routes:
      routeNamespaces: {}
      routeSelector:
        matchLabels:
          selected: "yes"
      group: ""
      resource: httproutes
  - hostname:
      match: Any
    port: 34000
    protocol: TCP
    routes:
      routeNamespaces: {}
      routeSelector:
        matchLabels:
          selected: "yes"
      resource: tcproutes
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: HTTPRoute
metadata:
  name: http
  namespace: default
  labels:
    selected: "yes"
spec:
  hosts:
  - hostnames: ["first.domain.example", "another.domain.example"]
    rules:
    - match:
        pathMatchType: Prefix
        path: /get
        headers:
          my-header: some-value
      filter:
        headers:
          add:
            my-added-header: added-value
          remove: [my-removed-header]
      action:
        forwardTo:
        - targetRef:
            name: httpbin
  - hostnames: ["second.domain.example"]
    rules:
    - match:
        pathMatchType: Prefix
        path: /second
      action:
        forwardTo:
        - targetRef:
            name: httpbin-second
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: HTTPRoute
metadata:
  name: http-not-selected
  namespace: default
  labels:
    selected: "nope"
spec:
  hosts:
  - hostnames: ["should.not.select"]
    rules:
    - match:
        pathMatchType: Prefix
        path: /get
      action:
        forwardTo:
        - targetRef:
            name: httpbin
---
apiVersion: networking.x-k8s.io/v1alpha1
kind: TCPRoute
metadata:
  name: tcp
  namespace: default
  labels:
    selected: "yes"
spec:
  rules:
  - action:
      forwardTo:
        targetRef:
          name: httpbin
